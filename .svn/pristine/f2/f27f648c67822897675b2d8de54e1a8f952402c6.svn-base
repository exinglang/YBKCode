package com.puxtech.ybk.jiaoyi.page;

import android.app.Activity;
import android.app.Dialog;
import android.content.Context;
import android.net.Uri;
import android.os.AsyncTask;
import android.os.Bundle;
import android.app.Fragment;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ArrayAdapter;
import android.widget.AutoCompleteTextView;
import android.widget.Button;
import android.widget.CheckBox;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.ProgressBar;
import android.widget.Spinner;
import android.widget.TextView;

import com.puxtech.ybk.BaseFragment;
import com.puxtech.ybk.Constant;
import com.puxtech.ybk.R;
import com.puxtech.ybk.helper.TextSizeHelper;
import com.puxtech.ybk.jiaoyi.httpmanager.HttpManagerLogin;
import com.puxtech.ybk.jiaoyi.responsedata.BaseResponseDataTrade;
import com.puxtech.ybk.jiaoyi.responsedata.CheckCodeResponseData;
import com.puxtech.ybk.util.ActivityUtils;
import com.puxtech.ybk.util.SharedPreferenceManager;

import java.util.Set;

public class LoginFragment extends BaseFragment {
    private static int REQUEST_CHECK_CODE = 1;
    private static int REQUEST_LOGIN = 2;
    View view;
    Spinner sp_tradetype, sp_accounttype;
    AutoCompleteTextView act_account;
    EditText et_password, et_checkcode;
    ImageView img_checkcode;
    TextView tv_reset;
    CheckBox cb_remember;
    Button bt_cancel, bt_login;
    ProgressBar bar;

    public LoginFragment() {
    }

    @Override
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
    }

    @Override
    public View onCreateView(LayoutInflater inflater, ViewGroup container,
                             Bundle savedInstanceState) {
        TextSizeHelper.setTextSize(context);

        view = inflater.inflate(R.layout.fragment_login, container, false);

        initWidget();
        requestCheckCodeImg();
        return view;
    }


    private void initWidget() {
        sp_tradetype = (Spinner) view.findViewById(R.id.sp_tradetype);
        sp_accounttype = (Spinner) view.findViewById(R.id.sp_accounttype);
        act_account = (AutoCompleteTextView) view.findViewById(R.id.act_account);
        et_password = (EditText) view.findViewById(R.id.et_password);
        et_checkcode = (EditText) view.findViewById(R.id.et_checkcode);
        img_checkcode = (ImageView) view.findViewById(R.id.img_checkcode);
        tv_reset = (TextView) view.findViewById(R.id.tv_reset);
        cb_remember = (CheckBox) view.findViewById(R.id.cb_remember);
        bt_cancel = (Button) view.findViewById(R.id.bt_cancel);
        bt_login = (Button) view.findViewById(R.id.bt_login);
        bar = (ProgressBar) view.findViewById(R.id.bar);
        SharedPreferenceManager spf_WX = new SharedPreferenceManager(context, SharedPreferenceManager.LOGIN);
        Set<String> siteno = spf_WX.getStringSet(SharedPreferenceManager.LOGIN_ACCOUNT_ARRAY);
        String[] arr = siteno.toArray(new String[siteno.size()]);
//        String [] arr={"aa","aab","aac"};
        ArrayAdapter arrayAdapter = new ArrayAdapter<>(context, android.R.layout.simple_list_item_1, arr);
        act_account.setAdapter(arrayAdapter);
        act_account.setThreshold(1);
        act_account.setText(spf_WX.getString(SharedPreferenceManager.LOGIN_LAST_ACCOUNT, ""));


        tv_reset.setOnClickListener(new View.OnClickListener() {
            public void onClick(View v) {
                request(REQUEST_CHECK_CODE);
                et_checkcode.setText("");
            }
        });
        bt_login.setOnClickListener(new View.OnClickListener() {
            public void onClick(View v) {
                request(REQUEST_LOGIN);
            }
        });

    }

    //请求验证码
    private void requestCheckCodeImg() {
        request(REQUEST_CHECK_CODE);
    }


    private void request(final int type) {
        putAsyncTask(new AsyncTask<Void, Void, Boolean>() {
            BaseResponseDataTrade responseData;
            Dialog dialog;

            protected void onPreExecute() {
                if (type == REQUEST_CHECK_CODE) {
                    bar.setVisibility(View.VISIBLE);
                    img_checkcode.setVisibility(View.GONE);
//                    startNum=1;
//                    InOutHistoryAdapter adapter = new InOutHistoryAdapter(context, new ArrayList<InOutHistoryEntity>());
//                    recyclerView.setAdapter(adapter);
                } else {
                    dialog = ActivityUtils.showLoadingProgressDialog(context);
                }

                super.onPreExecute();
            }

            @SuppressWarnings("ResourceType")
            protected Boolean doInBackground(Void... params) {
                try {
                    HttpManagerLogin httpManager = new HttpManagerLogin(context);

                    if (type == REQUEST_CHECK_CODE) {
                        responseData = httpManager.requestCheckCode();
                    } else if (type == REQUEST_LOGIN) {
                        responseData = httpManager.requestTradeLogin(act_account.getText().toString(), et_password.getText().toString(), et_checkcode.getText().toString(), String.valueOf(et_checkcode.getTag()));


//                        responseData = httpManager.requestInOutHistory(startTime, endTime, startNum);
                    }

                    //获取开户信息

                } catch (Exception e) {
                    e.printStackTrace();
                    responseData.setRetCode(Constant.CODE_ERROR_UNKNOW);
                    responseData.setRetMessage(Constant.MESSAGE_ERROR_UNKNOW);
                }
                return true;
            }

            protected void onPostExecute(Boolean result) {
                super.onPostExecute(result);
                if (!(type == REQUEST_CHECK_CODE)) {
                    dialog.dismiss();
                }
                if (0 == responseData.getRetCode()) {
                    if (type == REQUEST_CHECK_CODE) {

                        bar.setVisibility(View.GONE);
                        img_checkcode.setVisibility(View.VISIBLE);

                        img_checkcode.setImageBitmap(ActivityUtils.getBitmap(((CheckCodeResponseData) responseData).getImgData()));
                        et_checkcode.setTag(((CheckCodeResponseData) responseData).getCheckCodeId());

                    } else if (type == REQUEST_LOGIN) {

                        if (cb_remember.isChecked()) {
                            SharedPreferenceManager spf_WX = new SharedPreferenceManager(context, SharedPreferenceManager.LOGIN);
                            spf_WX.putStringSet(SharedPreferenceManager.LOGIN_ACCOUNT_ARRAY, act_account.getText().toString());
                            spf_WX.putString(SharedPreferenceManager.LOGIN_LAST_ACCOUNT, act_account.getText().toString());
                        }
//                        putStringSet

                    }
// else if (type == REQUEST_MORE) {
//                       otifyDataSetChanged();
//                    }
//
//
                } else {

                    if (type == REQUEST_CHECK_CODE) {
                        bar.setVisibility(View.GONE);
                        img_checkcode.setVisibility(View.VISIBLE);
//                        img_checkcode.setImageBitmap();®
                        img_checkcode.setImageResource(R.drawable.failcode_ny);

                        //之前加过一次.如果失败,需要不加
//                        startNum = startNum - 5;

                    } else {
                        ActivityUtils.showAlert(context, responseData.getRetMessage() + "(" + responseData.getRetCode() + ")");
                    }
                }
            }
        });
    }

//    @Override
//    public void onHiddenChanged(boolean hidden) {
//        Log.i("doithideLoginFragme",hidden+"");
//        if(!hidden){
//            TextSizeHelper.setTextSize(context);
//        }
//        super.onHiddenChanged(hidden);
//    }

    public void setTextSize() {
        Log.i("doit","ddd");
        TextSizeHelper.setTextSize(context);

    }
}
